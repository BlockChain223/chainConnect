extends layout

block content
  include ./includes/common.pug
  script.
    var setting_maxTxCount = parseInt("#{settings.api_page.public_apis.ext.getlasttxs.max_items_per_query}");
    var setting_txPerPage = parseInt("#{settings.movement_page.movement_table.items_per_page}");
    var lengthMenuOptsAdd = !{JSON.stringify(settings.movement_page.movement_table.page_length_options)};
    var lengthMenuOpts = [];
    var addedLength = false;
    for (i = 0; i < lengthMenuOptsAdd.length; i++) {
      if (setting_maxTxCount >= lengthMenuOptsAdd[i]) {
        if (!addedLength) {
          if (lengthMenuOptsAdd[i] > setting_txPerPage) {
            lengthMenuOpts.push(setting_txPerPage);
            addedLength = true;
          }
        }

        lengthMenuOpts.push(lengthMenuOptsAdd[i]);

        if (!addedLength) {
          if (lengthMenuOptsAdd[i] > setting_txPerPage)
            lengthMenuOpts.push(setting_txPerPage);
          if (lengthMenuOptsAdd[i] == setting_txPerPage || lengthMenuOptsAdd[i] > setting_txPerPage)
            addedLength = true;
        }
      }
    }
    if (!addedLength && setting_txPerPage <= setting_maxTxCount && setting_txPerPage != lengthMenuOpts[lengthMenuOpts.length - 1])
      lengthMenuOpts.push(setting_txPerPage);
    if (!addedLength && setting_txPerPage > setting_maxTxCount && setting_maxTxCount != lengthMenuOpts[lengthMenuOpts.length - 1])
      lengthMenuOpts.push(setting_maxTxCount);
    if (setting_maxTxCount < setting_txPerPage)
      var displayLengthMax = setting_maxTxCount;
    else
      var displayLengthMax = setting_txPerPage;
    $(document).ready(function() {
      var rtable = $('#movement-table').dataTable({
        autoWidth: true,
        searching: false,
        ordering: false,
        lengthChange: true,
        processing: true,
        serverSide: true,
        iDisplayLength: displayLengthMax,
        lengthMenu: lengthMenuOpts,
        scrollX: true,
        ajax: {
          url: '/ext/getlasttxs/#{settings.movement_page.movement_table.min_amount}',
          beforeSend: function(jqXHR, settings) {
            settings.url = settings.url.substring(0, settings.url.indexOf('?')) + '/' + getParameterByName('start', settings.url) + '/' + getParameterByName('length', settings.url) + '/internal';
            return true;
          }
        },
        language: {
          paginate: {
            previous: '<',
            next: '>'
          }
        },
        rowCallback: function(row, data, index) {
          var blockindex = data[0]; //variables for better readability
          var blockhash = data[1]; //variables for better readability
          var txhash = data[2]; //variables for better readability
          var outputs = data[3]; //variables for better readability
          var amount = data[4]; //variables for better readability
          var amountParts = Number(amount).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':8,'useGrouping':true}).split('.');
          var amountStr = amountParts[0] + '.<span class="decimal">' + amountParts[1] + '</span>';
          var timestamp = data[5]; //variables for better readability
          var total = "<label class='badge badge-" + (amount > '#{settings.movement_page.movement_table.high_warning_flag}' ? 'danger' : (amount > '#{settings.movement_page.movement_table.low_warning_flag}' ? 'warning' : 'success')) + "' style='margin-bottom:0;'>" + amountStr + "</label>";
          $("td:eq(0)", row).html('<a href="/tx/' + txhash + '"><span class="fa fa-eye" data-toggle="tooltip" data-placement="top" title="#{settings.locale.view_tx}"></span></a>').addClass('text-center d-table-cell d-md-none');
          $("td:eq(1)", row).html('<a href="/tx/' + txhash + '">' + txhash + '</a>').addClass('breakWord d-none d-md-table-cell');
          $("td:eq(2)", row).html(total).addClass('text-center');
          $("td:eq(3)", row).html('<span' + (#{settings.shared_pages.date_time.enable_alt_timezone_tooltips} == true ? ' data-toggle="tooltip" data-placement="auto" title="' + format_unixtime(timestamp, true) + '"' : '') + '>' + format_unixtime(timestamp) + '</span>').addClass('text-center');
        },
        fnDrawCallback: function(settings) {
          fixDataTableColumns();
          fixFooterHeightAndPosition();
          enableTooltips();
        }
      });

      var setting_reload_table_seconds = parseInt("#{settings.movement_page.movement_table.reload_table_seconds}");
      if (setting_reload_table_seconds > 0) {
        setInterval( function () {
          rtable.api().ajax.reload(null, false);
        }, (setting_reload_table_seconds * 1000) );
      }

      var lastUpdatedDate = #{(last_updated == null || last_updated == '0' ? 0 : last_updated)};

      if (lastUpdatedDate != 0) {
        $('span#lastUpdatedDate').html(' ' + format_unixtime(lastUpdatedDate));

        if (#{settings.shared_pages.date_time.enable_alt_timezone_tooltips} == true) {
          $('span#lastUpdatedDate').attr('data-toggle', 'tooltip').attr('data-placement', 'auto').attr('title', format_unixtime(lastUpdatedDate, true));
          enableTooltips();
        }
      } else
        $('span#lastUpdatedDate').html(' N/A');
    });
  .col-md-12
    if settings.movement_page.show_last_updated == true
      div.font-weight-bold(style='margin-bottom:15px;') Blockchain data last updated:
        span#lastUpdatedDate.font-weight-normal
    .card.card-default.border-0.cardSpacer
      .card-header
        strong="Latest Movement"
      table#movement-table.table.table-bordered.table-striped.table-paging.mobile-border-right
        - var theadClasses = [];
        if settings.shared_pages.table_header_bgcolor != null && settings.shared_pages.table_header_bgcolor != ''
          - theadClasses.push('thead-' + settings.shared_pages.table_header_bgcolor);
        thead(class=theadClasses)
          tr
            th.d-table-cell.d-md-none
            th.d-none.d-md-table-cell #{settings.locale.tx_hash}
            th.text-center #{settings.locale.mkt_amount}
              span.small  (#{settings.coin.symbol})
            th.text-center #{settings.locale.timestamp}
        tbody